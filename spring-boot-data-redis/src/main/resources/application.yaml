spring:
  application:
    name: spring-boot-data-redis-examples
  redis:
    host: localhost
    port: 6379
    database: 0
    timeout: 10s
    lettuce:
      pool:
        max-active: 200
        max-idle: 20
        max-wait: -1ms



# REDIS (RedisProperties) https://github.com/spring-projects/spring-boot/blob/v2.1.2.RELEASE/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/redis/RedisProperties.java

# spring.redis.cluster.max-redirects= # Maximum number of redirects to follow when executing commands across the cluster.
# spring.redis.cluster.nodes= # Comma-separated list of "host:port" pairs to bootstrap from.
# spring.redis.database=0 # Database index used by the connection factory.
# spring.redis.url= # Connection URL. Overrides host, port, and password. User is ignored. Example: redis://user:password@example.com:6379
# spring.redis.host=localhost # Redis server host.
# spring.redis.jedis.pool.max-active=8 # Maximum number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
# spring.redis.jedis.pool.max-idle=8 # Maximum number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
# spring.redis.jedis.pool.max-wait=-1ms # Maximum amount of time a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
# spring.redis.jedis.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
# spring.redis.lettuce.pool.max-active=8 # Maximum number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
# spring.redis.lettuce.pool.max-idle=8 # Maximum number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
# spring.redis.lettuce.pool.max-wait=-1ms # Maximum amount of time a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
# spring.redis.lettuce.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
# spring.redis.lettuce.shutdown-timeout=100ms # Shutdown timeout.
# spring.redis.password= # Login password of the redis server.
# spring.redis.port=6379 # Redis server port.
# spring.redis.sentinel.master= # Name of the Redis server.
# spring.redis.sentinel.nodes= # Comma-separated list of "host:port" pairs.
# spring.redis.ssl=false # Whether to enable SSL support.
# spring.redis.timeout= # Connection timeout.