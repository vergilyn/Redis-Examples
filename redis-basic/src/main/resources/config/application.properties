# \u90E8\u5206redis\u914D\u7F6E
spring.redis.database=0
spring.redis.host=127.0.0.1
# spring.redis.password=
spring.redis.port=6379
# \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.pool.max-active=800
spring.redis.pool.max-wait=5000
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5
spring.redis.pool.max-idle=4
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5
spring.redis.pool.min-idle=0
spring.redis.timeout=2000

#### REDIS (RedisProperties)
## https://github.com/spring-projects/spring-boot/tree/v1.5.2.RELEASE/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/redis/RedisProperties.java

# spring.redis.cluster.max-redirects= # Maximum number of redirects to follow when executing commands across the cluster.
# spring.redis.cluster.nodes= # Comma-separated list of "host:port" pairs to bootstrap from.
# spring.redis.database=0 # Database index used by the connection factory.
# spring.redis.url= # Connection URL, will override host, port and password (user will be ignored), e.g. redis://user:password@example.com:6379
# spring.redis.host=localhost # Redis server host.
# spring.redis.password= # Login password of the redis server.
# spring.redis.ssl=false # Enable SSL support.
# spring.redis.pool.max-active=8 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
# spring.redis.pool.max-idle=8 # Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
# spring.redis.pool.max-wait=-1 # Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
# spring.redis.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
# spring.redis.port=6379 # Redis server port.
# spring.redis.sentinel.master= # Name of Redis server.
# spring.redis.sentinel.nodes= # Comma-separated list of host:port pairs.
# spring.redis.timeout=0 # Connection timeout in milliseconds.








